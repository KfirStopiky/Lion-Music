import * as tslib_1 from "tslib";
import { NgModule, Injectable, Inject } from '@angular/core';
import { Router, NavigationEnd } from '@angular/router';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/router';
function _window() {
    return window;
}
var WindowRef = /** @class */ (function () {
    function WindowRef() {
    }
    Object.defineProperty(WindowRef.prototype, "nativeWindow", {
        get: function () {
            return _window();
        },
        enumerable: true,
        configurable: true
    });
WindowRef.ɵfac = function WindowRef_Factory(t) { return new (t || WindowRef)(); };
WindowRef.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: WindowRef, factory: function (t) { return WindowRef.ɵfac(t); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(WindowRef, [{
        type: Injectable
    }], function () { return []; }, null); })();
    return WindowRef;
}());
export { WindowRef };
var BackButtonDisableModule = /** @class */ (function () {
    function BackButtonDisableModule(router, windowRef, preserveScrollPosition) {
        this.router = router;
        this.windowRef = windowRef;
        this.preserveScrollPosition = preserveScrollPosition;
        this.scrollX = 0;
        this.scrollY = 0;
        this.window = this.windowRef.nativeWindow;
        this.disableBackButton();
        this.addPopStateEventListener();
    }
    BackButtonDisableModule_1 = BackButtonDisableModule;
    BackButtonDisableModule.forRoot = function (config) {
        return {
            ngModule: BackButtonDisableModule_1,
            providers: [
                {
                    provide: 'preserveScrollPosition',
                    useValue: config && 'preserveScrollPosition' in config ? config.preserveScrollPosition : false
                }
            ]
        };
    };
    BackButtonDisableModule.prototype.addPopStateEventListener = function () {
        var _this = this;
        this.window.addEventListener('popstate', function () {
            if (_this.preserveScrollPosition)
                _this.getScrollCoordinates();
            _this.window.history.pushState(null, null, null);
            if (_this.preserveScrollPosition)
                setTimeout(_this.scrollToThePreviousPosition.bind(_this));
        });
    };
    BackButtonDisableModule.prototype.scrollToThePreviousPosition = function () {
        this.window.scrollTo(this.scrollX, this.scrollY);
    };
    BackButtonDisableModule.prototype.getScrollCoordinates = function () {
        this.scrollX = this.window.scrollX;
        this.scrollY = this.window.scrollY;
    };
    BackButtonDisableModule.prototype.disableBackButton = function () {
        var _this = this;
        this.window.history.pushState(null, null, null);
        this.router.events.subscribe(function (event) {
            if (event instanceof NavigationEnd) {
                _this.window.history.pushState(null, null, null);
            }
            ;
        });
    };
    var BackButtonDisableModule_1;
    BackButtonDisableModule.ctorParameters = function () { return [
        { type: Router },
        { type: WindowRef },
        { type: Boolean, decorators: [{ type: Inject, args: ['preserveScrollPosition',] }] }
    ]; };
    BackButtonDisableModule = BackButtonDisableModule_1 = tslib_1.__decorate([ tslib_1.__param(2, Inject('preserveScrollPosition'))
    ], BackButtonDisableModule);
BackButtonDisableModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: BackButtonDisableModule });
BackButtonDisableModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function BackButtonDisableModule_Factory(t) { return new (t || BackButtonDisableModule)(ɵngcc0.ɵɵinject(ɵngcc1.Router), ɵngcc0.ɵɵinject(WindowRef), ɵngcc0.ɵɵinject('preserveScrollPosition')); }, providers: [WindowRef] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BackButtonDisableModule, [{
        type: NgModule,
        args: [{
                providers: [WindowRef]
            }]
    }], function () { return [{ type: ɵngcc1.Router }, { type: WindowRef }, { type: Boolean, decorators: [{
                type: Inject,
                args: ['preserveScrollPosition']
            }] }]; }, null); })();
    return BackButtonDisableModule;
}());
export { BackButtonDisableModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGljX2FwaS5qcyIsInNvdXJjZXMiOlsiYW5ndWxhci1kaXNhYmxlLWJyb3dzZXItYmFjay1idXR0b24vcHVibGljX2FwaS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxVQUFVLEVBQXVCLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNsRixPQUFPLEVBQUUsTUFBTSxFQUFFLGFBQWEsRUFBRSxNQUFNLGlCQUFpQixDQUFDOzs7QUFFeEQsU0FBUyxPQUFPO0FBQUssSUFDbkIsT0FBTyxNQUFNLENBQUM7QUFDaEIsQ0FBQztBQUdEO0FBQ29CLElBRHBCO0FBQXVCLElBSXZCLENBQUM7QUFDRCxJQUpFLHNCQUFJLG1DQUFZO0FBQUksYUFBcEI7QUFBYyxZQUNaLE9BQU8sT0FBTyxFQUFFLENBQUM7QUFDckIsUUFBRSxDQUFDO0FBQ0Y7QUFHVztBQUVELE9BTlI7SUFIVSxTQUFTLGdDQURyQixVQUFVLEVBQUUsUUFDQSxTQUFTLENBSXJCOzs7O2dEQUNEO0FBQ0EsSUFGQSxnQkFBQztBQUVELENBRkMsQUFKRCxJQUlDO0FBQ0QsU0FMYSxTQUFTO0FBU3RCO0FBRW1CLElBSWpCLGlDQUNVLE1BQWMsRUFDZCxTQUFvQixFQUNjLHNCQUErQjtBQUMxRSxRQUhTLFdBQU0sR0FBTixNQUFNLENBQVE7QUFBQyxRQUNmLGNBQVMsR0FBVCxTQUFTLENBQVc7QUFBQyxRQUNhLDJCQUFzQixHQUF0QixzQkFBc0IsQ0FBUztBQUM3RSxRQVBVLFlBQU8sR0FBRyxDQUFDLENBQUM7QUFDdEIsUUFBVSxZQUFPLEdBQUcsQ0FBQyxDQUFDO0FBQ3RCLFFBTUksSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLFlBQVksQ0FBQTtBQUM3QyxRQUFJLElBQUksQ0FBQyxpQkFBaUIsRUFBRSxDQUFDO0FBQzdCLFFBQUksSUFBSSxDQUFDLHdCQUF3QixFQUFFLENBQUM7QUFDcEMsSUFBRSxDQUFDO0FBQ0gsZ0NBZmEsdUJBQXVCO0FBQUUsSUFnQjdCLCtCQUFPLEdBQWQsVUFBZSxNQUE0QztBQUFJLFFBQzdELE9BQU87QUFDWCxZQUFNLFFBQVEsRUFBRSx5QkFBdUI7QUFDdkMsWUFBTSxTQUFTLEVBQUU7QUFDakIsZ0JBQVE7QUFDUixvQkFBVSxPQUFPLEVBQUUsd0JBQXdCO0FBQzNDLG9CQUFVLFFBQVEsRUFBRSxNQUFNLElBQUksd0JBQXdCLElBQUksTUFBTSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsc0JBQXNCLENBQUMsQ0FBQyxDQUFDLEtBQUs7QUFDeEcsaUJBQVM7QUFDVCxhQUFPO0FBQ1AsU0FBSyxDQUFBO0FBQ0wsSUFBRSxDQUFDO0FBRUgsSUFBVSwwREFBd0IsR0FBaEM7QUFBYyxRQUFkLGlCQU1DO0FBQ0gsUUFOSSxJQUFJLENBQUMsTUFBTSxDQUFDLGdCQUFnQixDQUFDLFVBQVUsRUFBRTtBQUN2QyxZQUFBLElBQUksS0FBSSxDQUFDLHNCQUFzQjtBQUFFLGdCQUFBLEtBQUksQ0FBQyxvQkFBb0IsRUFBRSxDQUFDO0FBQ25FLFlBQU0sS0FBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDdEQsWUFBTSxJQUFJLEtBQUksQ0FBQyxzQkFBc0I7QUFBRSxnQkFBQSxVQUFVLENBQUMsS0FBSSxDQUFDLDJCQUEyQixDQUFDLElBQUksQ0FBQyxLQUFJLENBQUMsQ0FBQyxDQUFDO0FBQy9GLFFBQUksQ0FBQyxDQUFDLENBQUM7QUFDUCxJQUFFLENBQUM7QUFFSCxJQUFVLDZEQUEyQixHQUFuQztBQUFjLFFBQ1osSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7QUFDckQsSUFBRSxDQUFDO0FBRUgsSUFBVSxzREFBb0IsR0FBNUI7QUFBYyxRQUNaLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUM7QUFDdkMsUUFBSSxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDO0FBQ3ZDLElBQUUsQ0FBQztBQUVILElBQVUsbURBQWlCLEdBQXpCO0FBQWMsUUFBZCxpQkFPQztBQUNILFFBUEksSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDcEQsUUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsVUFBQSxLQUFLO0FBQUksWUFDcEMsSUFBSSxLQUFLLFlBQVksYUFBYSxFQUFFO0FBQzFDLGdCQUFRLEtBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ3hELGFBQU87QUFBQyxZQUFELENBQUM7QUFDUixRQUFJLENBQUMsQ0FBQyxDQUFDO0FBQ1AsSUFBRSxDQUFDO0FBQ0Y7QUFDaUM7QUFBb0UsZ0JBL0NsRixNQUFNO0FBQ3hCLGdCQUFxQixTQUFTO0FBQzlCLDhDQUFHLE1BQU0sU0FBQyx3QkFBd0I7QUFBUTtBQUFVLElBVHpDLHVCQUF1Qiw0REFIbkMsUUFBUSxDQUFDLGNBQ1IsU0FBUyxFQUFFLENBQUMsU0FBUyxyREFFZixDQVNILG1CQUFBLE1BQU0sQ0FBQyx3QkFBd0IsQ0FBQyxDQUFBO0FBWGIsVUFDdkIsQ0FBQyxYQVVvQyxPQVR6Qix1QkFBdUIsQ0FxRG5DOzs7Ozs7Ozs7OztrQ0FDRDtBQUFDLElBREQsOEJBQUM7QUFDQSxDQURBLEFBckRELElBcURDO0FBQ0QsU0F0RGEsdUJBQXVCO0FBRXBDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUsIEluamVjdGFibGUsIE1vZHVsZVdpdGhQcm92aWRlcnMsIEluamVjdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUm91dGVyLCBOYXZpZ2F0aW9uRW5kIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcblxuZnVuY3Rpb24gX3dpbmRvdygpOiBhbnkge1xuICByZXR1cm4gd2luZG93O1xufVxuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgV2luZG93UmVmIHtcbiAgZ2V0IG5hdGl2ZVdpbmRvdygpOiBhbnkge1xuICAgIHJldHVybiBfd2luZG93KCk7XG4gIH1cbn1cblxuQE5nTW9kdWxlKHtcbiAgcHJvdmlkZXJzOiBbV2luZG93UmVmXVxufSlcbmV4cG9ydCBjbGFzcyBCYWNrQnV0dG9uRGlzYWJsZU1vZHVsZSB7XG5cbiAgcHJpdmF0ZSB3aW5kb3c6IFdpbmRvdztcbiAgcHJpdmF0ZSBzY3JvbGxYID0gMDtcbiAgcHJpdmF0ZSBzY3JvbGxZID0gMDtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIHJvdXRlcjogUm91dGVyLFxuICAgIHByaXZhdGUgd2luZG93UmVmOiBXaW5kb3dSZWYsXG4gICAgQEluamVjdCgncHJlc2VydmVTY3JvbGxQb3NpdGlvbicpIHByaXZhdGUgcHJlc2VydmVTY3JvbGxQb3NpdGlvbjogYm9vbGVhblxuICApIHtcbiAgICB0aGlzLndpbmRvdyA9IHRoaXMud2luZG93UmVmLm5hdGl2ZVdpbmRvd1xuICAgIHRoaXMuZGlzYWJsZUJhY2tCdXR0b24oKTtcbiAgICB0aGlzLmFkZFBvcFN0YXRlRXZlbnRMaXN0ZW5lcigpO1xuICB9XG5cbiAgc3RhdGljIGZvclJvb3QoY29uZmlnPzogeyBwcmVzZXJ2ZVNjcm9sbFBvc2l0aW9uOiBib29sZWFuIH0pOiBNb2R1bGVXaXRoUHJvdmlkZXJzIHtcbiAgICByZXR1cm4ge1xuICAgICAgbmdNb2R1bGU6IEJhY2tCdXR0b25EaXNhYmxlTW9kdWxlLFxuICAgICAgcHJvdmlkZXJzOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBwcm92aWRlOiAncHJlc2VydmVTY3JvbGxQb3NpdGlvbicsXG4gICAgICAgICAgdXNlVmFsdWU6IGNvbmZpZyAmJiAncHJlc2VydmVTY3JvbGxQb3NpdGlvbicgaW4gY29uZmlnID8gY29uZmlnLnByZXNlcnZlU2Nyb2xsUG9zaXRpb24gOiBmYWxzZVxuICAgICAgICB9XG4gICAgICBdXG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBhZGRQb3BTdGF0ZUV2ZW50TGlzdGVuZXIoKTogdm9pZCB7XG4gICAgdGhpcy53aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncG9wc3RhdGUnLCAoKSA9PiB7XG4gICAgICBpZiAodGhpcy5wcmVzZXJ2ZVNjcm9sbFBvc2l0aW9uKSB0aGlzLmdldFNjcm9sbENvb3JkaW5hdGVzKCk7XG4gICAgICB0aGlzLndpbmRvdy5oaXN0b3J5LnB1c2hTdGF0ZShudWxsLCBudWxsLCBudWxsKTtcbiAgICAgIGlmICh0aGlzLnByZXNlcnZlU2Nyb2xsUG9zaXRpb24pIHNldFRpbWVvdXQodGhpcy5zY3JvbGxUb1RoZVByZXZpb3VzUG9zaXRpb24uYmluZCh0aGlzKSk7XG4gICAgfSk7XG4gIH1cblxuICBwcml2YXRlIHNjcm9sbFRvVGhlUHJldmlvdXNQb3NpdGlvbigpOiB2b2lkIHtcbiAgICB0aGlzLndpbmRvdy5zY3JvbGxUbyh0aGlzLnNjcm9sbFgsIHRoaXMuc2Nyb2xsWSk7XG4gIH1cblxuICBwcml2YXRlIGdldFNjcm9sbENvb3JkaW5hdGVzKCk6IHZvaWQge1xuICAgIHRoaXMuc2Nyb2xsWCA9IHRoaXMud2luZG93LnNjcm9sbFg7XG4gICAgdGhpcy5zY3JvbGxZID0gdGhpcy53aW5kb3cuc2Nyb2xsWTtcbiAgfVxuXG4gIHByaXZhdGUgZGlzYWJsZUJhY2tCdXR0b24oKTogdm9pZCB7XG4gICAgdGhpcy53aW5kb3cuaGlzdG9yeS5wdXNoU3RhdGUobnVsbCwgbnVsbCwgbnVsbCk7XG4gICAgdGhpcy5yb3V0ZXIuZXZlbnRzLnN1YnNjcmliZShldmVudCA9PiB7XG4gICAgICBpZiAoZXZlbnQgaW5zdGFuY2VvZiBOYXZpZ2F0aW9uRW5kKSB7XG4gICAgICAgIHRoaXMud2luZG93Lmhpc3RvcnkucHVzaFN0YXRlKG51bGwsIG51bGwsIG51bGwpO1xuICAgICAgfTtcbiAgICB9KTtcbiAgfVxufVxuIl19