/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { NgxImgZoomComponent } from './ngx-img-zoom.component';
import { CommonModule } from '@angular/common';
import { NgxImgZoomService } from './ngx-img-zoom.service';
import { MouseWheelDirective } from './mouse-wheel.directive';
import * as ɵngcc0 from '@angular/core';
var NgxImgZoomModule = /** @class */ (function () {
    function NgxImgZoomModule() {
    }
NgxImgZoomModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgxImgZoomModule });
NgxImgZoomModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgxImgZoomModule_Factory(t) { return new (t || NgxImgZoomModule)(); }, providers: [NgxImgZoomService], imports: [[
            CommonModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxImgZoomModule, { declarations: function () { return [NgxImgZoomComponent, MouseWheelDirective]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgxImgZoomComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxImgZoomModule, [{
        type: NgModule,
        args: [{
                imports: [
                    CommonModule
                ],
                providers: [NgxImgZoomService],
                declarations: [NgxImgZoomComponent, MouseWheelDirective],
                exports: [NgxImgZoomComponent]
            }]
    }], function () { return []; }, null); })();
    return NgxImgZoomModule;
}());
export { NgxImgZoomModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWltZy16b29tLm1vZHVsZS5qcyIsInNvdXJjZXMiOlsibmd4LWltZy16b29tL2xpYi9uZ3gtaW1nLXpvb20ubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQy9ELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUMzRCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQzs7QUFFOUQ7QUFJSyxJQUpMO0FBRUssSUFNMkIsQ0FBQztvREFSaEMsUUFBUSxTQUFDO2NBQ1IsT0FBTyxFQUFFLDBCQUNQLFlBQVksc0JBQ2Isc0JBQ0QsU0FBUyxFQUFFLENBQUMsaUJBQWlCLENBQUMsc0JBQzlCLFlBQVksRUFBRSxDQUFDO1FBQW1CLEVBQUU7SUFBbUIsQ0FBQztZQUN4RCxPQUFPLEVBQUUsQ0FBQyxtQkFBbUIsQ0FBQyxrQkFDL0I7Ozs7Ozs7Ozs7O2dEQUNRO0FBQUMsSUFBc0IsdUJBQUM7QUFDaEMsQ0FEZ0MsQUFSakMsSUFRaUM7QUFDakMsU0FEYSxnQkFBZ0I7QUFBSSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOZ3hJbWdab29tQ29tcG9uZW50IH0gZnJvbSAnLi9uZ3gtaW1nLXpvb20uY29tcG9uZW50JztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBOZ3hJbWdab29tU2VydmljZSB9IGZyb20gJy4vbmd4LWltZy16b29tLnNlcnZpY2UnO1xuaW1wb3J0IHsgTW91c2VXaGVlbERpcmVjdGl2ZSB9IGZyb20gJy4vbW91c2Utd2hlZWwuZGlyZWN0aXZlJztcblxuQE5nTW9kdWxlKHtcbiAgaW1wb3J0czogW1xuICAgIENvbW1vbk1vZHVsZVxuICBdLFxuICBwcm92aWRlcnM6IFtOZ3hJbWdab29tU2VydmljZV0sXG4gIGRlY2xhcmF0aW9uczogW05neEltZ1pvb21Db21wb25lbnQsIE1vdXNlV2hlZWxEaXJlY3RpdmVdLFxuICBleHBvcnRzOiBbTmd4SW1nWm9vbUNvbXBvbmVudF1cbn0pXG5leHBvcnQgY2xhc3MgTmd4SW1nWm9vbU1vZHVsZSB7IH1cbiJdfQ==